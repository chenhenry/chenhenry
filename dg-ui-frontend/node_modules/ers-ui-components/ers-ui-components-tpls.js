(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('accordion/template/accordion-group-template.html',
    '<div class="panel panel-default"><a href=javascript:void(0) tabindex=0 class=accordion-toggle ng-click=vm.toggleOpen() ng-class="{ \'is-open\': vm.isOpen }"><div class=panel-heading><div class=panel-title><span ng-class="{\'text-muted\': vm.ngDisabled || vm.parent.ngDisabled}"><i class="pull-left fa fa-caret-right"></i> {{vm.heading}} <span ers-accordion-heading-transclude></span> <span class=result-count>{{vm.subheading}} <span ers-accordion-subheading-transclude></span></span></span></div></div></a><div class=panel-collapse uib-collapse=!vm.isOpen><div class=panel-body ng-transclude></div></div></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('accordion/template/accordion-template.html',
    '<div class="panel-group ers-accordion" ng-transclude></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('button/template/button-template.html',
    '<div ng-click=ctrl.onClick($event)><button ng-disabled=ctrl.ngDisabled name={{ctrl.name}} class=btn value={{ctrl.label}} type={{ctrl.type}}><ng-transclude></ng-transclude>{{ctrl.label}}</button></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('calendar/template/calendar-template.html',
    '<div class=input-group><input type=text class=form-control datepicker-append-to-body=calendarCtrl.appendToBody uib-datepicker-popup={{calendarCtrl.dateFormat}} datepicker-options=calendarCtrl.dateOptions ng-model=calendarCtrl.ngModel ng-model-options="{allowInvalid: true}" is-open=calendarCtrl.isOpen show-button-bar=calendarCtrl.showButtonBar close-text={{calendarCtrl.closeText}} clear-text={{calendarCtrl.clearText}} current-text={{calendarCtrl.currentText}} ng-disabled=calendarCtrl.ngDisabled ng-readonly=calendarCtrl.ngReadonly ng-change=calendarCtrl.dateChanged() ng-click=calendarCtrl.open()> <span class=input-group-btn><button class="btn btn-default" type=button ng-click=calendarCtrl.open()><i class="fa fa-calendar"></i></button></span></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('chart/template/chart-template.html',
    '<div ng-attr-id={{ctrl.containerId}} class=chart-container ng-class="{ready: ctrl.ready}"></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('checkbox/template/checkbox-template.html',
    '<div ng-form=subForm><div class=checkbox-btn-div><div class=ers-checkbox-button><div class=checkbox-btn-div><div class=erscheckbox></div></div><div class=checkbox-display-div ng-transclude></div></div></div></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('combobox/template/combobox-item-template.html',
    '<li role=presentation><a class=menuitem><ng-transclude></ng-transclude></a></li>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('combobox/template/combobox-template.html',
    '<div class="btn-group dropdown-select" ng-form=subForm><button type=button class="dropdown-toggle form-control btn btn-sm btn-fixed-size" ers-popover po-placement="bottom auto" po-show-arrow={{comboboxController.withArrow}} po-target=#{{comboboxController.targetId}} po-keyboard=true po-container=body po-lazy-load=true><span class=button-text></span> <span class=select-caret><span class="fa-stack fa-lg"><i class="fa fa-stack-1x"></i></span></span></button><div ng-show=!comboboxController._ngDisabled class="ers-combobox ers-combobox-list" style=display:none;width:100%><ul class=popover-content style=max-height:150px;overflow-y:auto><ng-transclude></ng-transclude></ul></div></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('contextmenu/template/contextmenu.tpl.html',
    '<div id={{id}} class="ers-context-menu clearfix" ng-keydown=onKeyDown($event) tabindex=0><ul class=context-menu-dropdown role=menu><li ng-repeat="item in menuItems" ng-hide=!item.visible ng-class="{\'separatorBefore\': item.separatorBefore, \'disabled\': !item.enabled, \'submenu\': item.children.length > 0}"><a tabindex="{{item.enabled ? 1 : -1}}" ng-if="!item.children || item.children.length == 0" ng-click=item.onClick($event)><ers-icon class=menu-item-icon name={{item.icon}} ng-if=item.icon></ers-icon><span ng-bind-html=item.label></span></a><ers-link-menu label={{item.label}} icon={{item.icon}} menu-items=item.children placement="auto right-top" trigger=hover exclusively=false container=self ng-if="item.children.length > 0"></ers-link-menu></li></ul></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('contextmenu/template/linkmenu.tpl.html',
    '<a class=ers-link-menu><ers-icon class=menu-item-icon name={{icon}} ng-if=icon></ers-icon><span ng-bind-html=label></span> <span class=direction-arrow><i class="fa fa-chevron-{{direction}}"></i></span></a>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('drawer/template/drawer-header-template.html',
    '<div class=ers-drawer-header-part-{{drawerHeaderComponent.drawerController.slideFrom}}><ers-icon name="{{drawerHeaderComponent.drawerController.pinned?\'unpin\':\'pin\'}}" ng-click=drawerHeaderComponent.togglePinned()></ers-icon><ng-transclude></ng-transclude></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('drawer/template/drawer-splitter-bar-template.html',
    '<i class="before-icon fa {{ ::drawerController.getSplitterExpandArrow() }}"></i> <i class="ellipsis-icon fa {{ ::drawerController.getSplitterEllipsisIcon() }}"></i> <i class="after-icon fa {{ ::drawerController.getSplitterCollapseArrow() }}"></i>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('drawer/template/drawer-tab-template.html',
    '<div class=ers-drawer-tab-icon-{{drawerController.slideFrom}}><i class="fa fa-play"></i></div><div class=ers-drawer-tab-label-{{drawerController.slideFrom}}><p>{{ drawerController.label }}</p></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('drawer/template/drawer-template.html',
    '<div class="ers-drawer-container ers-drawer-container-{{drawerController.slideFrom}}"><div class=ers-drawer-tab-container-{{drawerController.slideFrom}} ng-if="drawerController.slideFrom === \'right\'"><div class=ers-drawer-tab-icon-{{drawerController.slideFrom}}><i class="fa fa-play"></i></div><div class=ers-drawer-tab-label-{{drawerController.slideFrom}}><p>{{ drawerController.label }}</p></div></div><div class=ers-drawer-tab-container-{{drawerController.slideFrom}} ng-if="drawerController.slideFrom === \'bottom\'"><div class=ers-drawer-tab-icon-{{drawerController.slideFrom}}><i class="fa fa-play"></i></div><div class=ers-drawer-tab-label-{{drawerController.slideFrom}}><p>{{ drawerController.label }}</p></div></div><div class=ers-drawer-block-container-{{drawerController.slideFrom}}><ng-include src="\'drawer/template/drawer-splitter-bar-template.html\'" ng-if="drawerController.slideFrom === \'right\'" class=ers-splitter-bar-{{drawerController.slideFrom}}></ng-include><ng-include src="\'drawer/template/drawer-splitter-bar-template.html\'" ng-if="drawerController.slideFrom === \'bottom\'" class=ers-splitter-bar-{{drawerController.slideFrom}}></ng-include><div class=ers-drawer-content-{{drawerController.slideFrom}} ng-transclude></div><ng-include src="\'drawer/template/drawer-splitter-bar-template.html\'" ng-if="drawerController.slideFrom === \'left\'" class=ers-splitter-bar-{{drawerController.slideFrom}}></ng-include><ng-include src="\'drawer/template/drawer-splitter-bar-template.html\'" ng-if="drawerController.slideFrom === \'top\'" class=ers-splitter-bar-{{drawerController.slideFrom}}></ng-include></div><div class=ers-drawer-tab-container-{{drawerController.slideFrom}} ng-if="drawerController.slideFrom === \'left\'"><div class=ers-drawer-tab-icon-{{drawerController.slideFrom}}><i class="fa fa-play"></i></div><div class=ers-drawer-tab-label-{{drawerController.slideFrom}}><p>{{ drawerController.label }}</p></div></div><div class=ers-drawer-tab-container-{{drawerController.slideFrom}} ng-if="drawerController.slideFrom === \'top\'"><div class=ers-drawer-tab-icon-{{drawerController.slideFrom}}><i class="fa fa-play"></i></div><div class=ers-drawer-tab-label-{{drawerController.slideFrom}}><p>{{ drawerController.label }}</p></div></div></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('dropdown-select/template/dropdown-select-grid.html',
    '<div class=select-container ng-class="{\'open\' : ctrl.open}"><div ng-if="::ctrl.filterMode !== \'off\'" ng-mouseenter="icon=true" ng-mouseleave="icon=false"><span class=set-icon ng-if=::ctrl.useSearchIcon><span ng-if="ctrl.ngModel !== null && !ctrl.ngDisabled"><i class=remove-selection-icon ng-class="{\'fa fa-close\' : icon}" ng-mousedown=::ctrl.clearSelection($event)></i></span> <i class="fa fa-search input-icon search-icon" ng-class="{disableIcon: ctrl.ngDisabled}" ng-mousedown=::ctrl.openDropdown($event)></i></span> <span class=set-icon ng-if=::!ctrl.useSearchIcon><span ng-if="ctrl.ngModel !== null && !ctrl.ngDisabled"><i class=remove-selection-icon ng-class="{\'fa fa-close\' : icon}" ng-mousedown=::ctrl.clearSelection($event)></i></span> <i class=input-icon ng-class="{\'fa fa-chevron-up\': ctrl.open, \'fa fa-chevron-down\': !ctrl.open, disableIcon: ctrl.ngDisabled}" ng-mousedown=::ctrl.toggleDropdown($event)></i></span> <input ng-if=::!ctrl.multiSelect type=text class=form-control name=inputField placeholder={{::ctrl.placeholder}} ng-change=::ctrl.filterTextChangeLocal($event) ng-model=ctrl.ngModelValue ng-click=::ctrl.openDropdown($event) ng-disabled=::ctrl.ngDisabled ng-blur=::ctrl.resetInput() ng-keydown=::ctrl.onKeyboardPressed($event) ng-required=::ctrl.ngRequired> <input ng-if=::ctrl.multiSelect id=inputElement type=text class="form-control no-select" name=inputField placeholder={{::ctrl.placeholder}} ng-change=::ctrl.filterTextChangeLocal($event) ng-model=ctrl.ngModelValue ng-click=::ctrl.openDropdown($event) ng-disabled=::ctrl.ngDisabled ng-blur=::ctrl.resetInput() ng-keydown=::ctrl.onKeyboardPressed($event) ng-required=::ctrl.ngRequired></div><div ng-if="::ctrl.filterMode === \'off\'"><div class="btn btn-default form-control" tabindex=1 type=button ng-click=::ctrl.toggleDropdown($event) ng-disabled=::ctrl.ngDisabled ng-keydown=::ctrl.onKeyboardPressed($event) ng-required=::ctrl.ngRequired ng-mouseenter="icon=true" ng-mouseleave="icon=false"><span ng-if="ctrl.ngModel !== null && ctrl.ngDisabled">{{ctrl.ngModelValue ? ctrl.ngModelValue : ctrl.placeholder}}</span> <span ng-if="ctrl.ngModel !== null && !ctrl.ngDisabled">{{ctrl.ngModelValue ? ctrl.ngModelValue : ctrl.placeholder}} <i class=remove-selection-icon ng-class="{\'fa fa-close\' : icon}" ng-mousedown=::ctrl.clearSelection($event)></i></span> <span ng-if="ctrl.ngModel === null">{{::ctrl.placeholder}}</span> <i ng-class="{\'fa fa-chevron-up\': ctrl.open, \'fa fa-chevron-down\': !ctrl.open, disableIcon: ctrl.ngDisabled}"></i></div></div><div class=dropdown-menu ng-if=::!ctrl.ngDisabled><table class=table><thead><tr><th ng-repeat="heading in ::ctrl.gridColumnHeaders" class=text-center>{{heading}}</th></tr></thead><tbody><tr ng-repeat="row in ctrl.filteredItems" ng-class="{\'active\': ctrl.checkEquality(row, ctrl.ngModel), \'focus\': row === ctrl.focusedRow}" ng-mousedown="::ctrl.onSelectedLocal(row, $event)" ng-mouseover=::ctrl.setFocusedRow(-1)><td ng-repeat="value in ::ctrl.sort(row) track by $index" class=text-center>{{::value}}</td></tr><tr ng-show="ctrl.filteredItems.length <= 0"><td class=text-center colspan={{::ctrl.gridColumnHeaders.length}}>{{::ctrl.noResultsMessage}}</td></tr></tbody></table></div></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('dropdown-select/template/dropdown-select-standard.html',
    '<div class=select-container ng-class="{\'open\' : ctrl.open}"><div ng-if="::ctrl.filterMode !== \'off\'" ng-mouseenter="icon=true" ng-mouseleave="icon=false"><span class=set-icon ng-if=::ctrl.useSearchIcon><span ng-if="ctrl.ngModel !== null && !ctrl.ngDisabled"><i class=remove-selection-icon ng-class="{\'fa fa-close\' : icon}" ng-mousedown=::ctrl.clearSelection($event)></i></span> <i class="fa fa-search input-icon" ng-class="{disableIcon: ctrl.ngDisabled}"></i></span> <span class=set-icon ng-if=::!ctrl.useSearchIcon><span ng-if="ctrl.ngModel !== null"><i class=remove-selection-icon ng-class="{\'fa fa-close\' : icon}" ng-mousedown=::ctrl.clearSelection($event)></i></span> <i class=input-icon ng-class="{\'fa fa-chevron-up\': ctrl.open, \'fa fa-chevron-down\': !ctrl.open, disabledIcon: ctrl.ngDisabled}" ng-mousedown=::ctrl.toggleDropdown($event)></i></span> <input ng-if=::!ctrl.multiSelect type=text class=form-control name=inputField placeholder={{::ctrl.placeholder}} ng-change=::ctrl.filterTextChangeLocal($event) ng-model=ctrl.ngModelValue ng-click=::ctrl.openDropdown($event) ng-disabled=::ctrl.ngDisabled ng-blur=::ctrl.resetInput() ng-keydown=::ctrl.onKeyboardPressed($event)> <input ng-if=::ctrl.multiSelect id=inputElement type=text class="form-control no-select" name=inputField placeholder={{::ctrl.placeholder}} ng-change=::ctrl.filterTextChangeLocal($event) ng-model=ctrl.ngModelValue ng-click=::ctrl.openDropdown($event) ng-disabled=::ctrl.ngDisabled ng-blur=::ctrl.resetInput() ng-keydown=::ctrl.onKeyboardPressed($event)></div><div ng-if="::ctrl.filterMode === \'off\'"><div class="btn btn-default form-control" tabindex=1 type=button ng-click=::ctrl.toggleDropdown($event) ng-disabled=::ctrl.ngDisabled ng-keydown=::ctrl.onKeyboardPressed($event) ng-mouseenter="icon=true" ng-mouseleave="icon=false"><span ng-if="ctrl.ngModel !== null && ctrl.ngDisabled">{{ctrl.ngModelValue ? ctrl.ngModelValue : ctrl.placeholder}}</span> <span ng-if="ctrl.ngModel !== null && !ctrl.ngDisabled">{{ctrl.ngModelValue ? ctrl.ngModelValue : ctrl.placeholder}} <i class=remove-selection-icon ng-class="{\'fa fa-close\' : icon}" ng-mousedown=::ctrl.clearSelection($event)></i></span> <span ng-if="ctrl.ngModel === null">{{::ctrl.placeholder}}</span> <i ng-class="{\'fa fa-chevron-up\': ctrl.open, \'fa fa-chevron-down\': !ctrl.open, disableIcon: ctrl.ngDisabled}"></i></div></div><ul class="dropdown-menu list-group" ng-if=::!ctrl.ngDisabled><li class=list-group-item ng-repeat="row in ctrl.filteredItems" ng-class="{\'active\': ctrl.checkEquality(row, ctrl.ngModel), \'focus\': row === ctrl.focusedRow }" ng-mousedown="::ctrl.onSelectedLocal(row, $event)" ng-mouseover=::ctrl.setFocusedRow(-1)>{{::row[ctrl.itemDisplayProperty]}}</li><li class="list-group-item text-center" ng-show="ctrl.filteredItems.length <= 0">{{::ctrl.noResultsMessage}}</li></ul></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('file/template/file-template.html',
    '<div class=ers-file-selector filters="queueLimit, customFilter"><div class=fileuploader-wrapper><div class=fileuploader><div class=dropzone><div class=uploader-area><p>{{ctrl.instructionText}}</p><div class=field-specs><div class=browse-textbox><ers-textbox ng-model=uploadedFileName placeholder={{ctrl.selectionInputPlaceHolderText}} ng-disabled=true></ers-textbox></div><ers-button type=button class=secondary onclick=$(this).next().click() ers-tooltip=Browse label=Browse ng-disabled=ctrl.selecting></ers-button><input id=selectFiles_{{ctrl.id}} class="btn btn-danger btn-xs" type=file multiple style="display: none;"><div><ers-icon name=information ers-popover po-content={{ctrl.informationTooltipTxt}} po-trigger=hover po-html=true po-hide-delay=1000 class=information-icon></ers-icon><span ng-if="ctrl.maxSize>=0" class=size-limit>Maximum file size is {{ctrl.maxSize}}MB</span></div></div><div class=text-center ng-if=ctrl.actionButtonVisible><ers-button ng-click=ctrl.actionButtonAction() label={{ctrl.actionButtonText}} ng-disabled="(ctrl.uploaderOptions.uploadStatus.uploading && ctrl.uploaderOptions.uploadStatus.uploading !==0) || !ctrl.selection || ctrl.selection.length<1|| ctrl.uploaderOptions.uploadStatus.toBeUploaded ===0"></ers-button></div></div><div class=clearfix></div><div class=bgimg-upload></div><div class=dragdrop-txt>Drag &amp; Drop Files<br>{{ctrl.dropZoneAdditionalText}}</div></div><div class=fileuploaderResults ng-show="ctrl.selection && ctrl.selection.length!=0"><div class=fileuploaderResultHeader><div class=progress-msg><p>{{ctrl.getSelectorUploaderText()}}</p></div><div class=progress style="width: 65%;float: left;margin-left: 10px; margin-right: 10px;" ng-if=ctrl.uploaderOptions.displayTotalProgress><div class=progress-bar role=progressbar ng-style="{ \'width\': ctrl.uploaderOptions.uploadStatus.progress + \'%\' }" style="width: 0%;"></div></div><div class=clear-queue><button type=button class="btn btn-link btn-xs" ng-click=ctrl.removeAllFiles()>Clear All</button></div><div class=clearfix></div></div><div class=progress-grid><div ng-repeat="item in ctrl.selection track by $index"><div class=filename-wrapper><a href=javascript:;><div ers-context-menu=ctrl.selectedItemContextMenu title="{{ item.file.name }}" ng-class="item.isUploadError?\'file-name-error\':\'file-name\'">{{ item.file.name }}</div></a></div><div ng-if=item.uploadHasBegun() class=progress-percent>{{item.uploadProgress}}%</div><div ng-if=item.uploadHasBegun() class=clearfix></div><div ng-if=item.uploadHasBegun() class=progress-wrapper><div class=progress><div class="progress-bar progress-bar-info progress-bar-striped" ng-class="item.isUploadError?\'progress-bar-danger\':item.isUploading?\'progress-bar-info\':\'progress-bar-success\'" role=progressbar aria-valuenow={{item.uploadProgress}} aria-valuemin=0 aria-valuemax=100 ng-style="{ \'width\': item.uploadProgress + \'%\' }"></div></div></div><div class=delete-file><ers-icon name=delete ng-click=ctrl.removeFile($index); title=delete class=fa-danger-action></ers-icon></div><div class=clearfix></div></div></div></div></div></div></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('grid/template/grid-template.html',
    '<div ng-hide=gridController.initialized class=loading-panel style=text-align:center;>{{gridController.loadingMessage}}</div><div class=ag-grid ng-if=gridController.initialized ag-grid=gridController.options></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('label/template/label-template.html',
    '<label class=ers-label title={{c.value}}><span class=ers-label-content ng-style=::c.contentStyle>{{c.value}}</span> <span ng-if=c.required class=ers-label-required>*</span></label>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('layout/template/layout-template.html',
    '<div class=ers-layout-container ng-transclude></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('layout/template/splitter-template.html',
    '<div class=ers-splitter-area><div class=ers-draggable-area><div class=ers-drag-img></div></div><div class=ers-prev-button-area><div class=ers-prev-img></div></div><div class=ers-next-button-area><div class=ers-next-img></div></div></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('login/template/login-template.html',
    '<script type=text/javascript ng-if=true>\n' +
    '    // do not remove the ng-if from the script tag, it\'s a trick to\n' +
    '    // set the focus on IE/Firefox browsers.\n' +
    '    $(function () {\n' +
    '        $(\'[autofocus]:not(:focus)\').eq(0).focus();\n' +
    '    });\n' +
    '</script><div class=ers-login ng-cloak><div class=main-frame><div class=login-header><h1 class=product-title>{{::ctrl.productName}}</h1><h1 ng-show=::ctrl.productName class=separator></h1><div class=login-title ng-style>Account Login</div></div><div class=login-box ng-cloak><div class=form-error ng-if=ctrl.getErrorMessage()>Unable to login: {{ctrl.getErrorMessage()}}</div><form name=loginForm role=form autocomplete=off novalidate id=loginForm><fieldset><input type=text style="display: none;"> <input type=password style="display: none;"><div class=form-input><input type=text name=username ng-model=ctrl.username placeholder=Username autofocus autocomplete=off ng-change="ctrl.loginError=undefined" ng-disabled=ctrl.computing class="{{ctrl.loginError ? (ctrl.loginError.credentialsError? \'invalid\' : \'valid\') : \'\'}}" required></div><div class=form-input><input type=password name=password ng-model=ctrl.password ng-change="ctrl.loginError=undefined" placeholder=Password ng-disabled=ctrl.computing autocomplete=off class="{{ctrl.loginError ? (ctrl.loginError.credentialsError? \'invalid\' : \'valid\') : \'\'}}" required></div><div class="form-input ers-dropdown" ng-disabled=ctrl.computing ng-if=ctrl.isDatabaseDdwVisible()><button class="btn btn-default dropdown-toggle" type=button id=dropdownMenu1 data-toggle=dropdown aria-expanded=true ng-disabled=ctrl.computing ng-if=ctrl.isDatabaseDdwVisible()>{{ctrl.getSelectedDb()}}<div class=down-arrow><span class="fa-stack fa-lg"><i class="fa fa-angle-down fa-stack-1x"></i></span></div></button><ul class=dropdown-menu role=menu aria-labelledby=dropdownMenu1 ng-if=ctrl.isDatabaseDdwVisible()><li ng-repeat="db in ctrl.databases" ng-click=ctrl.selectDb($index) ng-class="{active: $index == ctrl.selectedDbIndex}"><a>{{db}}</a></li></ul></div><div class=login-support ng-cloak=true><div class=pull-left><div ng-show=ctrl.resetPasswordOptions>Forgot your&nbsp;<a href=javascript:; ng-class="ctrl.computing?\'disabledLink\':\'\'" ng-click=ctrl.openResetPassword()>Username</a> or <a href=javascript:; ng-class="ctrl.computing?\'disabledLink\':\'\'" ng-click=ctrl.openResetPassword()>Password</a>?</div><div ng-show=ctrl.changePasswordOptions><a href=javascript:; ng-class="ctrl.computing?\'disabledLink\':\'\'" ng-click=ctrl.openChangePassword()>Change password</a></div><br>Need <a href=javascript:; ng-class="ctrl.computing?\'disabledLink\':\'\'">Support</a>?</div></div><div class=pull-left ng-hide=ctrl.isRetrieveCredentials></div><div class=pull-right><ers-button name=btnLogin ng-disabled="loginForm.$invalid || ctrl.computing" type=submit ng-click=ctrl.login() label=Login form=loginForm></ers-button></div></fieldset></form></div></div></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('modal/template/information-modal-template.html',
    '<ers-icon ng-if=ctrl.icon name={{ctrl.icon}} size=40></ers-icon><p style=padding-top:10px id=ersModalMessageContent>{{ctrl.message}}</p>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('modal/template/modal-template.html',
    '<div class=ers-modal id={{ctrl.id}}><div class=modal-header><strong>{{ctrl.title}}</strong><div class=pull-right ng-if="ctrl.dismissCrossButtonVisible && !ctrl.disableAllButtons()"><a ng-disabled=ctrl.disableAllButtons() class=close ng-click=ctrl.onDismissModal($event)><span class="glyphicon glyphicon-remove"></span></a></div></div><div class=modal-body><form name=modalForm role=form autocomplete=off novalidate id=modalForm_{{ctrl.id}}><div class=modal-form><ng-include src=ctrl.instanceTemplate></ng-include></div><div class=form-input><div class=pull-right id=ersModalButtonBar><input id=fake style=display:none;width:0;height:0;border:0;><ers-button ng-repeat="button in ctrl.buttons" type="{{button.commitChoice?\'submit\':\'button\'}}" form="{{button.commitChoice?\'modalForm_\'+ctrl.id:\'button\'+$index+\'\'}}" id={{button.id}} name="{{button.commitChoice?\'commit\':\'button\'+$index+\'\'}}" class="{{button.escapeChoice?\'secondary\':\'primary\'}}" label={{button.label}} ers-enter=ctrl.buttonEnter ng-click=button.escapeChoice?ctrl.onDismissModal($event):ctrl.onCloseModal($event) ng-disabled=button.commitChoice?!ctrl.formIsValid():ctrl.disableAllButtons()><ers-icon name={{button.icon}} ng-if=button.icon></ers-icon></ers-button></div></div></form></div></div><ers-modal-script modal-id={{ctrl.id}} draggable=ctrl.draggable resizable=ctrl.resizable modal=ctrl.modal focus-path=ctrl.focusPath></ers-modal-script>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('navigation/template/navigation-item-template.html',
    '<div class=ers-nav-heading>{{vm.heading}}</div><div class=ers-nav-content ng-transclude></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('navigation/template/navigation-template.html',
    '<div class=menu data-scope-id={{$id}} data-show-active={{vm.showActive}} ng-transclude></div><div class=footer>&copy; 2016 Moody\'s Analytics, Inc. and/or its licensors and affiliates. All rights reserved.</div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('numberbox/template/numberbox-template.html',
    '<div ng-form=subFormTextbox><input type=text name={{::c.name}} ng-required=c.required ng-pattern=c.textPattern ng-readonly=c.readOnly ng-disabled=c.ngDisabled ng-trim=false></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('panel/template/panel-body.html',
    '<div class=panel-collapse ng-class="{isClosed: bodyCtrl.closed()}" uib-collapse=bodyCtrl.closed()><div class=panel-body ng-transclude></div></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('panel/template/panel-custom-template.html',
    '<div class=panel ng-class="ctrl.panelClass || \'panel-default\'" ng-transclude></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('panel/template/panel-header.html',
    '<div class=panel-heading><div class="btn-group pull-left" ng-show=headerCtrl.collapsible><button class="btn btn-icon" ng-click=headerCtrl.toggle() tt-placement=top><i class=icon ng-class="{\'fa fa-chevron-up\': !headerCtrl.closed, \'fa fa-chevron-down\': headerCtrl.closed}"></i></button></div><div ng-transclude></div></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('panel/template/panel-template.html',
    '<div class=panel ng-class="ctrl.panelClass || \'panel-default\'"><ers-panel-header>{{ctrl.header}}</ers-panel-header><ers-panel-body><ng-transclude></ng-transclude></ers-panel-body></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('password-management/template/change-password-template.html',
    '<div class=ers-change-password><div class=change-password-box ng-cloak><div class=form-error ng-show=ctrl.changePasswordError>{{ctrl.changePasswordError.message}}</div><div class=form-input><input type=text name=username ng-model=ctrl.username placeholder="User ID" ng-disabled="ctrl.usernameInitialized || ctrl.computing" ng-change="ctrl.changePasswordError=undefined" class="{{ctrl.changePasswordError? (ctrl.changePasswordError.credentialsError? \'invalid\' : \'valid\' ): \'\'}}" autocomplete=off required><br></div><div class=txt-database ng-if=ctrl.database>Database: {{ctrl.database}}</div><div class=form-input><input type=password name=oldpassword ng-model=ctrl.oldPassword ng-change="ctrl.changePasswordError=undefined" class="{{ctrl.changePasswordError? (ctrl.changePasswordError.credentialsError? \'invalid\' : \'valid\' ): \'\'}}" placeholder="Old Password" ng-disabled=ctrl.computing autocomplete=off required></div><div class=form-input><input type=password name=newPassword ng-model=ctrl.newPassword ng-change="ctrl.changePasswordError=undefined" class="{{ctrl.changePasswordError? (ctrl.changePasswordError.newPasswordError? \'invalid\' : \'valid\' ): \'\'}}" placeholder="New Password" ng-disabled=ctrl.computing autocomplete=off required></div><div class=form-input><input type=password name=confirmPassword ng-change="ctrl.changePasswordError=undefined" class="{{ctrl.changePasswordError? (ctrl.changePasswordError.newPasswordError? \'invalid\' : \'valid\' ): \'\'}}" ng-model=ctrl.confirmNewPassword ng-disabled=ctrl.computing placeholder="Confirm New Password" autocomplete=off required></div></div></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('password-management/template/reset-password-template.html',
    '<div style="width:300px; margin:0 auto;"><div class=ers-reset-password><div class=rp-box><div class=rp-message>Enter your email address and we will send you an email with instructions to reset your password.</div><form name=rpForm role=form autocomplete=off novalidate id=rpForm><fieldset><input type=text style="display: none;"><div class=form-input><input type=text name=email placeholder=Email autofocus autocomplete=off ng-model=ctrl.email></div></fieldset></form></div></div></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('popover/template/popover.tpl.html',
    '<div class=ers-popover><h3 class=popover-title ng-bind=title ng-show=title></h3><div class=popover-content ng-bind=content></div></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('radio-buttons/template/radio-button-template.html',
    '<div class=ers-radio-button><div class=radio-btn-div><div></div></div><div class=radio-display-div ng-transclude></div></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('radio-buttons/template/radio-group-template.html',
    '<div ng-form=subForm name={{::c.name}}><ng-transclude></ng-transclude></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('shell/template/settings-template.html',
    '<div><div class=modal-header><strong>Change Password</strong><div class=pull-right><a class=close ers-modal-cancel><span class="glyphicon glyphicon-remove-circle"></span></a></div></div><div class=modal-body><div class=loginBox ng-cloak><div class=formError ng-show=ChangePasswordController.changePasswordError>{{ChangePasswordController.changePasswordError.message}}</div><form name=loginForm role=form autocomplete=off novalidate><fieldset><div class=formInput><input type=text name=username ng-model=ChangePasswordController.username placeholder="User ID" required ng-disabled=ChangePasswordController.usernameInitialized class="{{ChangePasswordController.changePasswordError && ChangePasswordController.changePasswordError.credentialsError? \'invalid\' : (loginForm.username.$dirty ? \'valid\' : \'\')}}" autocomplete=off><br></div><div class=txtDatabase>Database: {{ChangePasswordController.database}}<div class=formInput></div><input type=password name=oldPassword ng-model=ChangePasswordController.oldPassword class="{{ChangePasswordController.changePasswordError && ChangePasswordController.changePasswordError.credentialsError? \'invalid\' : (loginForm.oldPassword.$dirty ? \'valid\' : \'\')}}" placeholder="Old Password" required autocomplete=off></div><div class=formInput><input type=password name=newPassword ng-model=ChangePasswordController.newPassword class="{{ChangePasswordController.changePasswordError && ChangePasswordController.changePasswordError.newPasswordError? \'invalid\' : (loginForm.newPassword.$dirty ? \'valid\' : \'\')}}" placeholder="New Password" required autocomplete=off></div><div class=formInput><input type=password name=confirmPassword class="{{ChangePasswordController.changePasswordError && ChangePasswordController.changePasswordError.newPasswordError? \'invalid\' : (loginForm.newPassword.$dirty ? \'valid\' : \'\')}}" ng-model=ChangePasswordController.confirmNewPassword placeholder="Confirm New Password" required autocomplete=off></div><div class=formInput><div class=pull-right><button class="btn btn-secondary btn-sm" type=button ers-modal-cancel>Cancel</button> <button class="btn btn-primary btn-sm" ng-disabled=loginForm.$invalid ers-modal-close on-modal-close=closeModal()>Update</button></div></div></fieldset></form></div></div></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('shell/template/shell-template.html',
    '<div class=ers-shell-top><div class=header><span><ers-top-shell on-settings=ctrl.onSettings() on-info=ctrl.onInfo() on-help=ctrl.onHelp() on-edit-profile=ctrl.onEditProfile() on-logout=ctrl.onLogout() products=ctrl.products current-product=ctrl.currentProduct on-product-change=ctrl._onProductChange(newProduct,oldProduct) on-after-product-change=ctrl.onAfterProductChange(newProduct,oldProduct) user-info=ctrl.userInfo on-context-selector=ctrl.onContextSelector() current-context=ctrl.currentContext help-is-visible=ctrl.helpIsVisible info-is-visible=ctrl.infoIsVisible settings-is-visible=ctrl.settingsIsVisible title={{ctrl.title}}></ers-top-shell></span></div><div class=product-view></div></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('shell/template/top-shell-template.html',
    '<div class=header-bar><div uib-dropdown class=ers-top-shell-product-selector><button class="btn btn-default" uib-dropdown-toggle><span ng-if=ctrl.currentProduct.label>{{ctrl.currentProduct.label}}</span></button><ul uib-dropdown-menu role=menu><li tabindex=-1 href=# ng-repeat="product in ctrl.products" title=Product_{{::product.label}} ng-click="ctrl.currentProduct = ctrl.products[$index]" ng-class="{active: $index == ctrl.selectedProductIndex}"><a href=javascript:;>{{::product.label}}</a></li></ul></div><div class=right-nav><span class=dropdown style="cursor: pointer" title="Context selector" ng-click=ctrl.onContextSelector()>{{ctrl.currentContext}}<span><i class="fa fa-angle-down fa-inverse"></i></span></span><span uib-dropdown class=ers-top-shell-user-info><span uib-dropdown-toggle><a href=javascript:;><span class="glyphicon glyphicon-user"></span></a> <span class="hidden-sm hidden-xs" title="User name">{{::ctrl.userInfo.name}}</span> <span><i class="fa fa-angle-down fa-inverse"></i></span></span><ul uib-dropdown-menu class="dropdown-menu-arrow dropdown-menu-right"><li><a href=javascript:; title="Last login">{{::ctrl.userInfo.lastLogin}}</a></li><li><a href=javascript:; ng-click=ctrl.onEditProfile() title="Edit profile">Edit Profile</a></li><li><a href=javascript:; ng-click=ctrl.onLogout() title=Logout>Logout</a></li></ul></span><a href=javascript:; title=Info ng-click=ctrl.onInfo() ng-if=ctrl.isInfoVisible()><i class="fa fa-info-circle fa-inverse"></i></a> <a href=javascript:; title=Help ng-click=ctrl.onHelp() ng-if=ctrl.isHelpVisible()><i class="fa fa-question-circle fa-inverse"></i></a> <a href=javascript:; title=Settings ng-click=ctrl.onSettings() ng-if=ctrl.isSettingsVisible()><i class="fa fa-gear fa-inverse"></i></a></div><h1 class=title>{{ctrl.title}}</h1></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('tabs/template/tab-template.html',
    '<li role=presentation ng-click=vm.onSelect() ng-class="{ active: vm.active, error: vm.errors.length }"><a ng-if=!vm.errors role=menuitem class=tab-heading title={{vm.heading}} ers-tab-heading-transclude>{{vm.heading}}</a> <a ng-if=vm.errors role=menuitem class=tab-heading tt-placement=top tt-theme=error ers-tooltip tt-title="{{vm.errors.join(\', \')}}" title={{vm.heading}} ers-tab-heading-transclude>{{vm.heading}}</a> <i class="tab-icon tab-icon-error fa fa-circle" ng-if=vm.errors.length></i> <i class="tab-icon tab-icon-close fa fa-times" ng-click=vm.onClose() ng-if="vm.tabset.canClose && (vm.tabset.tabs.length > 1 || vm.tabset.canCloseSingle)"></i></li>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('tabs/template/tabset-template.html',
    '<div class=fade-left ng-show="vm.leftHiddenTabs.length > 0"></div><div class=fade-right ng-show="vm.rightHiddenTabs.length > 0"></div><div class=dropdown ng-show="vm.menuItemsOfHiddenTabs.length > 0"><ers-link-menu class=dropdown-toggle ng-attr-id={{::vm.dropdownMenuId()}} placement=bottom-right menu-items=vm.menuItemsOfHiddenTabs></ers-link-menu></div><div class=nav-tabs-wrapper><ul class="nav nav-tabs" ng-transclude></ul></div><div class=tab-content><div class=tab-pane ng-repeat="tab in vm.tabs" ng-class="{ active: tab.active }"><div ers-tab-content-transclude=tab></div></div></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('textbox/template/textbox-template.html',
    '<div ng-form=subFormTextbox><input type="{{c.password ? \'password\' : \'text\'}}" name={{::c.name}} placeholder={{c.placeholder}} ng-required=c.required ng-readonly=c.readOnly ng-disabled=c.ngDisabled ng-trim=false></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('toolbar/template/toolbar-template.html',
    '<div class=ers-toolbar><div class="toolbar-container toolbar-hz" ng-transclude></div></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('tooltip/template/tooltip.tpl.html',
    '<div class=ers-tooltip ng-show="tooltip || title"><div class=tooltip-title ng-bind="tooltip || title"></div></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('tree/template/tree.tpl.html',
    '<div class=ers-tree><ers-tree-items parent-item=root tabindex=0 tree-id={{treeId}} expand-icon={{expandIcon}} collapse-icon={{collapseIcon}} multiple-selection=multipleSelection selected-item=selectedItem item-renderer=itemRenderer item-loader=itemLoader tree-draggable=treeDraggable></ers-tree-items><div ng-transclude style="display: none"></div></div>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('tree/template/treeitem.tpl.html',
    '<li draggable={{treeController.treeDraggable}}><a href=javascript:void(0) tabindex=0 draggable=false ng-class="{\'selected\': item.selected}" ng-click=onItemClick()><span class="indented expand-collapse-icon" ng-style="{\'left\': 25 * level}" ng-show="item.children.length > 0 || item.loading"><i class="fa fa-{{::collapseIcon}}" ng-show="item.collapsed && item.children.length > 0 && !item.loading" ng-click=item.expand($event)></i> <i class="fa fa-{{::expandIcon}}" ng-show="!item.collapsed && item.children.length > 0 && !item.loading" ng-click=item.collapse($event)></i> <span ng-show=item.loading><i class="fa fa-spinner fa-spin"></i></span></span> <span class="indented tree-item" ng-style="{\'left\': 25 * level, \'padding-right\': 25 * level + 5}" ers-tree-item-renderer-holder item-renderer=itemRenderer item=item><i class="tree-item-icon fa fa-{{::item.icon}}" ng-show="item.isLeaf && item.icon"></i><ers-label value={{item.label}}></ers-label></span></a></li>');
}]);
})();

(function(module) {
try {
  module = angular.module('ers.components.templates');
} catch (e) {
  module = angular.module('ers.components.templates', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('tree/template/treeitems.tpl.html',
    '<ul><ers-tree-item ng-if=ctrl.parentItem ng-repeat="item in ctrl.parentItem.children" item=item parent=ctrl level=ctrl.level collapse-icon=ctrl.collapseIcon expand-icon=ctrl.expandIcon item-renderer=ctrl.itemRenderer item-loader=ctrl.itemLoader></ers-tree-item></ul>');
}]);
})();
